/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/outputs.h>

#define BASE 0
#define LOWER 1
#define RAISE 2
#define ADJUST 3
#define GAME 4

/ {

   // Activate ADJUST layer by pressing raise and lower
    conditional_layers {
        compatible = "zmk,conditional-layers";
        adjust_layer {
            if-layers = <LOWER RAISE>;
            then-layer = <ADJUST>;
        };
    };
    
    keymap {
        compatible = "zmk,keymap";

        default_layer {
            label = "QWERTY";
// ------------------------------------------------------------------------------------------------------------
// |  ESC  |  1  |  2  |  3   |  4   |  5   |                   |  6   |   7   |   8   |  9   |   0   |   `   |
// |  TAB  |  Q  |  W  |  E   |  R   |  T   |                   |  Y   |   U   |   I   |  O   |   P   |  Entr |
// | LSHIFT|  A  |  S  |  D   |  F   |  G   |                   |  H   |   J   |   K   |  L   |   ;   |   '   |
// |       |  Z  |  X  |  C   |  V   |  B   |  MUTE  |  | PLAY  |  N   |   M   |   ,   |  .   |   /   | RShift|
//               |CTRL | ALT  | LGUI | LOWER|  BSPC |  | SPACE | RAISE| RCTR   | RALT  | RGUI |
            bindings = <
&kp ESC   &kp N1  &kp N2     &kp N3    &kp N4     &kp N5                            &kp N6  &kp N7     &kp N8     &kp N9   &kp N0    &kp GRAVE
&kp TAB   &kp Q   &kp W      &kp E     &kp R      &kp T                             &kp Y   &kp U      &kp I      &kp O    &kp P     &kp RET
&kp LSHFT &kp A   &kp S      &kp D     &kp F      &kp G                             &kp H   &kp J      &kp K      &kp L    &kp SEMI  &kp SQT
&none  &kp Z   &kp X      &kp C     &kp V      &kp B    &kp C_MUTE  &kp LG(L)    &kp N   &kp M      &kp COMMA  &kp DOT  &kp FSLH  &kp RSHFT
                  &kp LCTRL  &kp LALT  &kp LGUI   &mo 1    &kp BSPC    &kp SPACE    &mo 2   &kp RCTRL  &kp RALT   &kp DEL
            >;

            sensor-bindings = <&inc_dec_kp C_VOL_DN C_VOL_UP &inc_dec_kp PG_UP PG_DN>;
        };

        lower_layer {
            label = "LOWER";
// TODO: Some binds are waiting for shifted keycode support.
// ------------------------------------------------------------------------------------------------------------
// |   F1  |  F2  |  F3  |  F4  |  F5  |  F6  |                    |  F7  |  F8  |  F9  |  F10  | F11  | F12  |
// |   `   |   1  |   2  |   3  |   4  |   5  |                    |   6  |   7  |   8  |   9   |   0  |      |
// |  Tab  |   !  |   @  |   #  |   $  |   %  |                    |   ^  |   &  |   *  |   (   |   )  |   |  |
// | LSHIFT|  =   |  -   |  +   |   {  |   }  | MUTE |      | PLAY |   [  |   ]  |   ;  |   :   |   \  | Shift|
//                |      |      |      |      |      |      |      |      |      |      |       |
            bindings = <
&kp F1    &kp F2    &kp F3    &kp F4      &kp F5    &kp F6                        &kp F7    &kp F8     &kp F9          &kp F10    &kp F11   &kp F12
&kp GRAVE &kp N1    &kp N2    &kp N3      &kp N4    &kp N5                        &kp N6    &kp N7     &kp N8          &kp N9    &kp N0    &none
&kp TAB   &kp EXCL  &kp AT    &kp HASH    &kp DLLR  &kp PRCNT                     &kp CARET &kp AMPS   &kp KP_MULTIPLY &kp LPAR  &kp RPAR  &kp PIPE
&kp LSHFT &kp EQUAL &kp MINUS &kp KP_PLUS &kp LBRC  &kp RBRC &trans     &trans    &kp LBKT  &kp RBKT   &kp SEMI        &kp COLON &kp BSLH  &trans
                    &trans     &trans     &trans    &trans   &trans     &trans    &trans    &trans     &trans          &trans
            >;

            sensor-bindings = <&inc_dec_kp C_VOL_UP C_VOL_DN &inc_dec_kp PG_UP PG_DN>;
        };

        raise_layer {
            label = "RAISE";
// ------------------------------------------------------------------------------------------------------------
// |BTCLR| BT1  | BT2  |  BT3  |  BT4  |  BT5 |                    |      |      |       |      |       |       |
// |     | INS  | PSCR | GUI   |       |      |                    | PGUP |      |   ^   |      |       |       |
// |     | ALT  | CTRL | SHIFT |       | CAPS |                    | PGDN |   <- |   v   |  ->  |  DEL  | BKSPC |
// |     | UNDO | CUT  | COPY  | PASTE |     |  MUTE  |     | PLAY |      | HOME |       |  END |       | Shift |
//              | LGUI |  LAlt | LCTR  |LOWER | Bspc  |     | SPACE | RAISE| RCTR | RAlt | RGUI |
            bindings = <
&bt BT_CLR &bt BT_SEL 0 &bt BT_SEL 1 &bt BT_SEL 2 &bt BT_SEL 3 &bt BT_SEL 4             &trans    &trans    &trans   &trans    &trans  &trans
&trans     &kp INS      &kp PSCRN    &kp K_CMENU  &trans       &trans                   &kp PG_UP &trans    &kp UP   &trans    &kp N0  &trans
&trans     &kp LALT     &kp LCTRL    &kp LSHFT    &trans       &kp CLCK                 &kp PG_DN &kp LEFT  &kp DOWN &kp RIGHT &kp DEL &kp BSPC
&trans     &kp K_UNDO   &kp K_CUT    &kp K_COPY   &kp K_PASTE  &trans  &trans   &trans  &trans    &kp HOME   &trans   &kp END    &trans  &trans
                        &trans       &trans       &trans       &trans  &trans   &trans  &trans    &trans    &trans   &trans
            >;

            sensor-bindings = <&inc_dec_kp C_VOL_UP C_VOL_DN &inc_dec_kp PG_UP PG_DN>;
        };
        
        Adjust_layer {
            label = "ADJUST";
// ------------------------------------------------------------------------------------------------------------
// |USB/BLE|TOGBLE|TOGUSB|      |       |      |                |      |      |       |      |       |       |
// |       |      |      |      |       |      |                |      |      |       |      |       |       |
// |       |      |      |      |       | GAME |                |      |      |       |      |       |       |
// |       |      |      |      |       |      |      |  |      |      |      |       |      |       |       |
//                |      |      |       |      |      |  |      |      |      |       |      |
        bindings = <
&out OUT_TOG  &out OUT_BLE  &out OUT_USB  &none  &none  &none                       &none  &none  &none  &none  &none  &none
&none         &none         &none         &none  &none  &none                       &none  &none  &none  &none  &none  &none
&none         &none         &none         &none  &none  &tog GAME                   &none  &none  &none  &none  &none  &none
&none         &none         &none         &none  &none  &none       &none  &none    &none  &none  &none  &none  &none  &none
                            &none         &none  &none  &none       &none  &none    &none  &none  &none  &none
            >;
        };
        
        Game_layer {
            label = "GAME";
// ------------------------------------------------------------------------------------------------------------
// |  ESC  |  1  |  2  |  3   |  4   |  5   |                   |  6   |   7   |   8   |  9   |   0   |  BSPC |
// |  TAB  |  Q  |  W  |  E   |  R   |  T   |                   |  Y   |   U   |   I   |  O   |   P   |   \   |
// | CTRL  |  A  |  S  |  D   |  F   |  G   |                   |  H   |   J   |   K   |  L   |   ;   |   '   |
// | SHIFT |  Z  |  X  |  C   |  V   |  B   |        |  |       |  N   |   M   |   ,   |  .   |   /   | SHIFT |
//               |CTRL | ALT  | LGUI | LOWER|  SPACE |  | ENTER | RAISE| CTRL  | LOCK  | DEL  |
            bindings = <
&kp ESC    &kp N1  &kp N2     &kp N3    &kp N4    &kp N5                          &kp N6  &kp N7     &kp N8     &kp N9   &kp N0    &kp BSPC
&kp TAB    &kp Q   &kp W      &kp E     &kp R     &kp T                           &kp Y   &kp U      &kp I      &kp O    &kp P     &kp BSLH
&kp LCTRL   &kp A   &kp S      &kp D     &kp F     &kp G                           &kp H   &kp J      &kp K      &kp L    &kp SEMI  &kp SQT
&kp LSHFT  &kp Z   &kp X      &kp C     &kp V     &kp B   &none       &none       &kp N   &kp M      &kp COMMA  &kp DOT  &kp FSLH  &kp RSHFT
                   &kp LCTRL  &kp LALT  &kp LGUI  &mo 1   &kp SPACE     &kp RET   &mo 2   &kp RCTRL  &kp LG(L)  &kp DEL
            >;
        };
    };
};
